{
  "version": 3,
  "sources": ["../../invariant/browser.js", "../../wait-for-expect/lib/helpers.js", "../../wait-for-expect/lib/index.js", "../../reconnecting-websocket/dist/reconnecting-websocket-mjs.js", "../../@mycelium-now/core/src/message.ts", "../../@mycelium-now/core/src/client.ts", "../../use-deep-compare-effect/dist/use-deep-compare-effect.esm.js", "../../dequal/dist/index.mjs", "../../@mycelium-now/react/src/mycelium-provider.tsx", "../../@mycelium-now/react/src/use-mycelium-client.tsx", "../../@mycelium-now/react/src/use-channel.tsx", "../../@mycelium-now/react/src/use-publish-event.tsx", "../../@mycelium-now/react/src/use-subscribe.tsx", "../../@mycelium-now/react/src/use-on-event.tsx", "../../@mycelium-now/react/src/use-on-any-event.tsx", "../../@mycelium-now/react/src/use-once-event.tsx", "../../@mycelium-now/react/src/use-prepend-any-event.tsx"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSetTimeoutFn = getSetTimeoutFn;\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-env jest */\n// Used to avoid using Jest's fake timers and Date.now mocks\n// See https://github.com/TheBrainFamily/wait-for-expect/issues/4 and\n// https://github.com/TheBrainFamily/wait-for-expect/issues/12 for more info\nvar globalObj = typeof window === \"undefined\" ? global : window; // Currently this fn only supports jest timers, but it could support other test runners in the future.\n\nfunction runWithRealTimers(callback) {\n  var usingJestFakeTimers = // eslint-disable-next-line no-underscore-dangle\n  globalObj.setTimeout._isMockFunction && typeof jest !== \"undefined\";\n\n  if (usingJestFakeTimers) {\n    jest.useRealTimers();\n  }\n\n  var callbackReturnValue = callback();\n\n  if (usingJestFakeTimers) {\n    jest.useFakeTimers();\n  }\n\n  return callbackReturnValue;\n}\n\nfunction getSetTimeoutFn() {\n  return runWithRealTimers(function () {\n    return globalObj.setTimeout;\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helpers = require(\"./helpers\");\n\nvar defaults = {\n  timeout: 4500,\n  interval: 50\n};\n/**\n * Waits for the expectation to pass and returns a Promise\n *\n * @param  expectation  Function  Expectation that has to complete without throwing\n * @param  timeout  Number  Maximum wait interval, 4500ms by default\n * @param  interval  Number  Wait-between-retries interval, 50ms by default\n * @return  Promise  Promise to return a callback result\n */\n\nvar waitForExpect = function waitForExpect(expectation) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.timeout;\n  var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.interval;\n  var setTimeout = (0, _helpers.getSetTimeoutFn)(); // eslint-disable-next-line no-param-reassign\n\n  if (interval < 1) interval = 1;\n  var maxTries = Math.ceil(timeout / interval);\n  var tries = 0;\n  return new Promise(function (resolve, reject) {\n    var rejectOrRerun = function rejectOrRerun(error) {\n      if (tries > maxTries) {\n        reject(error);\n        return;\n      } // eslint-disable-next-line no-use-before-define\n\n\n      setTimeout(runExpectation, interval);\n    };\n\n    function runExpectation() {\n      tries += 1;\n\n      try {\n        Promise.resolve(expectation()).then(function () {\n          return resolve();\n        }).catch(rejectOrRerun);\n      } catch (error) {\n        rejectOrRerun(error);\n      }\n    }\n\n    setTimeout(runExpectation, 0);\n  });\n};\n\nwaitForExpect.defaults = defaults;\nvar _default = waitForExpect;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n", "enum MessageTypes {\n  Hello = 'hello',\n  Error = 'error',\n  Subscribe = 'subscribe',\n  SubscribeSucess = 'subscribe_success',\n  Unsubscribe = 'unsubscribe',\n  UnsubscribeSuccess = 'unsubscribe_success',\n  Publish = 'publish',\n  PublishSuccess = 'publish_success',\n}\n\ninterface HelloMessage {\n  t: MessageTypes.Hello;\n  d: {\n    sid: string;\n  };\n}\n\ninterface SubscribeSuccessMessage {\n  t: MessageTypes.SubscribeSucess;\n  d: {\n    s: number;\n    c: string;\n  };\n}\n\ninterface PublishSuccessMessage {\n  t: MessageTypes.PublishSuccess;\n  d: {\n    s: number;\n    c: string;\n  };\n}\n\ninterface PublishMessage {\n  t: MessageTypes.Publish;\n  d: {\n    e: string;\n    c: string;\n    d: unknown;\n  };\n}\n\ninterface ErrorMessage {\n  s?: number;\n  t: MessageTypes;\n  r: string;\n}\n\nexport {\n  ErrorMessage,\n  HelloMessage,\n  MessageTypes,\n  PublishMessage,\n  PublishSuccessMessage,\n  SubscribeSuccessMessage,\n};\n", "import ReconnectingWebSocket from 'reconnecting-websocket';\nimport waitForExpect from 'wait-for-expect';\n\nimport {\n  ErrorMessage,\n  HelloMessage,\n  MessageTypes,\n  PublishMessage,\n  PublishSuccessMessage,\n  SubscribeSuccessMessage,\n} from './message';\n\ninterface KeyAuthentication {\n  type: AuthenticationType.KEY;\n\n  /**\n   * How to get the key used to authenticate the connection. For example by simply returning it or fetching it.\n   * Don't use this authentication type in untrusted environments.\n   * ```js\n   * return \"my-key-id:my-key-secret\";\n   * ```\n   */\n  getKey: () => string | Promise<string>;\n}\n\ninterface TokenAuthentication {\n  type: AuthenticationType.TOKEN;\n\n  /**\n   * How to get the token used to authenticate the connection. For example by fetching your API which\n   * returns the token.\n   * ```js\n   * const { token } = await fetch(MY_API_URL).then(r => r.json());\n   * return token;\n   * ```\n   */\n  getToken: () => string | Promise<string>;\n}\n\nenum AuthenticationType {\n  KEY,\n  TOKEN,\n}\n\ninterface Connection {\n  authentication: KeyAuthentication | TokenAuthentication;\n  baseURL?: string;\n  manual?: boolean;\n}\n\ninterface Ack {\n  failureReason?: string;\n}\n\ntype SpecialEvent = 'connect' | 'disconnect';\n\ntype Listener<TData> = (data: TData, event: string) => void;\n\ninterface Channel {\n  name: string;\n  on: <TData = unknown>(event: string, listener: Listener<TData>) => void;\n  once: <TData = unknown>(event: string, listener: Listener<TData>) => void;\n  off: <TData>(event: string, listener: Listener<TData>) => void;\n  offOnce: <TData>(event: string, listener: Listener<TData>) => void;\n  removeAllListeners: (...events: string[]) => void;\n  onAny: <TData>(listener: Listener<TData>) => void;\n  prependAny: <TData>(listener: Listener<TData>) => void;\n  offAny: <TData>(...listeners: Listener<TData>[]) => void;\n  publish: <TData = unknown>(\n    event: string,\n    data: TData,\n    includePublisher: boolean\n  ) => Promise<void>;\n  unsubscribe: () => Promise<void>;\n}\n\nconst defaults = {\n  baseURL: 'wss://mycelium-server.fly.dev/realtime',\n};\n\nclass Client {\n  private channels = new Map<\n    string,\n    {\n      instance: Channel;\n      eventListeners: { event: string; listener: Listener<any> }[];\n      anyListeners: Listener<any>[];\n      onceListeners: { event: string; listener: Listener<any> }[];\n    }\n  >();\n\n  private seqNumber = 1;\n  private acks = new Map<number, Ack>();\n  private specialEventsHandlers = new Map<SpecialEvent, VoidFunction[]>();\n  private ws: ReconnectingWebSocket | undefined;\n\n  public sid: string | undefined;\n  public isConnected = false;\n\n  constructor(connection: Connection) {\n    if (!connection.manual) {\n      this.connect(connection);\n    }\n  }\n\n  public getChannels() {\n    return Array.from(this.channels.keys());\n  }\n\n  public async channel(channelName: string): Promise<Channel> {\n    if (!this.isConnected || !this.ws) {\n      throw new Error(`failed to use channel ${channelName}, not connected`);\n    }\n\n    const existingChannel = this.channels.get(channelName);\n    if (existingChannel) {\n      return existingChannel.instance;\n    }\n\n    const subscribeSeq = this.seqNumber++;\n\n    this.ws.send(\n      JSON.stringify({\n        t: MessageTypes.Subscribe,\n        d: {\n          s: subscribeSeq,\n          c: channelName,\n        },\n      })\n    );\n\n    await waitForExpect(() => {\n      if (!this.acks.has(subscribeSeq)) {\n        throw new Error(\n          `failed to subscribe to channel ${channelName}, timed out`\n        );\n      }\n    });\n\n    const ack = this.acks.get(subscribeSeq);\n    if (ack?.failureReason) {\n      throw new Error(ack.failureReason);\n    }\n\n    const channel: Channel = {\n      name: channelName,\n\n      unsubscribe: async () => {\n        if (!this.isConnected || !this.ws) {\n          throw new Error(\n            `failed to unsubscribe from channel ${channelName}, not connected`\n          );\n        }\n\n        if (!this.channels.has(channelName)) {\n          throw new Error(\n            `failed to unsubscribe from channel ${channelName}, not subscribed`\n          );\n        }\n\n        const unsubscribeSeq = this.seqNumber++;\n\n        this.ws.send(\n          JSON.stringify({\n            t: MessageTypes.Unsubscribe,\n            d: {\n              s: unsubscribeSeq,\n              c: channelName,\n            },\n          })\n        );\n\n        await waitForExpect(() => {\n          if (!this.acks.has(unsubscribeSeq)) {\n            throw new Error(\n              `failed to unsubscribe from channel ${channelName}, timed out`\n            );\n          }\n        });\n\n        const ack = this.acks.get(unsubscribeSeq);\n        if (ack?.failureReason) {\n          throw new Error(ack.failureReason);\n        }\n\n        this.channels.delete(channelName);\n      },\n\n      off: (event, listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            eventListeners: channel.eventListeners.filter(\n              (l) => l.event !== event && l.listener !== listener\n            ),\n          });\n        }\n      },\n\n      offOnce: (event, listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            onceListeners: channel.onceListeners.filter(\n              (l) => l.event !== event && l.listener !== listener\n            ),\n          });\n        }\n      },\n\n      offAny: (...listeners) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          if (!listeners.length) {\n            // Remove all listeners\n            this.channels.set(channelName, {\n              ...channel,\n              anyListeners: [],\n            });\n\n            return;\n          }\n\n          this.channels.set(channelName, {\n            ...channel,\n            anyListeners: channel.anyListeners.filter(\n              (l) => !listeners.some((listener) => listener === l)\n            ),\n          });\n        }\n      },\n\n      on: (event, listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            eventListeners: [\n              ...channel.eventListeners,\n              {\n                event,\n                listener: (data: any, event) => {\n                  listener(data, event);\n                },\n              },\n            ],\n          });\n        }\n      },\n\n      onAny: (listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            anyListeners: [...channel.anyListeners, listener],\n          });\n        }\n      },\n\n      once: (event, listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            onceListeners: [\n              ...channel.onceListeners.filter((l) => l.event !== event),\n              {\n                event,\n                listener: (data: any, event) => {\n                  listener(data, event);\n                },\n              },\n            ],\n          });\n        }\n      },\n\n      prependAny: (listener) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          this.channels.set(channelName, {\n            ...channel,\n            anyListeners: [listener, ...channel.anyListeners],\n          });\n        }\n      },\n\n      removeAllListeners: (...events) => {\n        const channel = this.channels.get(channelName);\n        if (channel) {\n          if (!events.length) {\n            // Remove all listeners\n            this.channels.set(channelName, {\n              ...channel,\n              eventListeners: [],\n            });\n\n            return;\n          }\n\n          this.channels.set(channelName, {\n            ...channel,\n            eventListeners: channel.eventListeners.filter(\n              (l) => !events.some((ev) => ev === l.event)\n            ),\n          });\n        }\n      },\n\n      publish: async (event, data, includePublisher = false) => {\n        if (!this.isConnected || !this.ws) {\n          throw new Error(\n            `failed to publish message on channel ${channelName}, not connected`\n          );\n        }\n\n        const publishSeq = this.seqNumber++;\n\n        this.ws.send(\n          JSON.stringify({\n            t: MessageTypes.Publish,\n            d: {\n              e: event,\n              s: publishSeq,\n              c: channelName,\n              d: data,\n              ip: includePublisher,\n            },\n          })\n        );\n\n        await waitForExpect(() => {\n          if (!this.acks.has(publishSeq)) {\n            throw new Error(\n              `failed to publish message on channel ${channelName}, timed out`\n            );\n          }\n        });\n\n        const ack = this.acks.get(publishSeq);\n        if (ack?.failureReason) {\n          throw new Error(ack.failureReason);\n        }\n      },\n    };\n\n    this.channels.set(channelName, {\n      instance: channel,\n      anyListeners: [],\n      eventListeners: [],\n      onceListeners: [],\n    });\n\n    return channel;\n  }\n\n  public on(specialEvent: SpecialEvent, handler: VoidFunction) {\n    const existingHandlers = this.specialEventsHandlers.get(specialEvent) || [];\n    this.specialEventsHandlers.set(specialEvent, [\n      ...existingHandlers,\n      handler,\n    ]);\n  }\n\n  private runSpecialEventHandlers(specialEvent: SpecialEvent) {\n    this.specialEventsHandlers.get(specialEvent)?.forEach((handler) => {\n      handler();\n    });\n  }\n\n  public disconnect() {\n    if (!this.ws || !this.isConnected) {\n      throw new Error(`can't disconnect, not connected`);\n    }\n\n    this.ws.close();\n\n    // Reset state.\n    this.acks = new Map();\n    this.channels = new Map();\n    this.seqNumber = 1;\n    this.isConnected = false;\n    this.sid = undefined;\n    this.ws = undefined;\n  }\n\n  public async connect({\n    authentication,\n    baseURL = defaults.baseURL,\n  }: Connection) {\n    let url: string;\n    if (authentication.type === AuthenticationType.KEY) {\n      const key = await authentication.getKey();\n      url = `${baseURL}?key=${key}`;\n    } else {\n      const token = await authentication.getToken();\n      url = `${baseURL}?token=${token}`;\n    }\n\n    this.ws = new ReconnectingWebSocket(url);\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    if (!this.ws) {\n      return;\n    }\n\n    this.ws.addEventListener('error', () => {\n      this.runSpecialEventHandlers('disconnect');\n    });\n\n    this.ws.addEventListener('close', () => {\n      this.runSpecialEventHandlers('disconnect');\n    });\n\n    this.ws.addEventListener('message', (ev) => {\n      try {\n        const message = JSON.parse(ev.data.toString());\n        switch (message.t) {\n          case MessageTypes.Hello: {\n            const { sid } = message.d as HelloMessage['d'];\n            this.sid = sid;\n            this.isConnected = true;\n            this.runSpecialEventHandlers('connect');\n            return;\n          }\n\n          case MessageTypes.Publish: {\n            const {\n              c: channelName,\n              d: data,\n              e: event,\n            } = message.d as PublishMessage['d'];\n\n            const channel = this.channels.get(channelName);\n            if (channel) {\n              channel.eventListeners.forEach((l) => {\n                if (l.event === event) {\n                  l.listener(data, event);\n                }\n              });\n\n              channel.onceListeners\n                .find((l) => l.event === event)\n                ?.listener(data, event);\n\n              channel.anyListeners.forEach((listener) => {\n                listener(data, event);\n              });\n            }\n\n            return;\n          }\n\n          case MessageTypes.UnsubscribeSuccess:\n          case MessageTypes.PublishSuccess:\n          case MessageTypes.SubscribeSucess: {\n            const { c: channelName, s } =\n              message.d as SubscribeSuccessMessage['d'];\n\n            this.acks.set(s, {});\n            return;\n          }\n\n          case MessageTypes.Error: {\n            const { r: reason, s } = message as ErrorMessage;\n            if (s) {\n              this.acks.set(s, { failureReason: reason });\n            }\n\n            return;\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n}\n\nexport {\n  Client,\n  AuthenticationType,\n  Connection,\n  TokenAuthentication,\n  KeyAuthentication,\n  Channel,\n};\n\nexport type { Listener };\n", "import * as React from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a momoized version of the value as long as it remains deeply equal\n */\n\n\nfunction useDeepCompareMemoize(value) {\n  var ref = React.useRef(value);\n  var signalRef = React.useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useMemo(function () {\n    return ref.current;\n  }, [signalRef.current]);\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport { useDeepCompareEffect as default, useDeepCompareEffectNoCheck, useDeepCompareMemoize };\n", "var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n", "import React, { createContext, ReactNode, useEffect, useState } from 'react';\nimport { Client, Connection } from '@mycelium-now/core';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nexport interface MyceliumContextValue {\n  isConnecting: boolean;\n  isConnected: boolean;\n  isError: boolean;\n  error: Error | null;\n  client: Client | null;\n}\n\n// Context setup\nexport const MyceliumContext = createContext<MyceliumContextValue | null>(null);\n\n/**\n * Props for `<MyceliumProvider />`.\n */\ninterface MyceliumProviderProps extends Omit<Connection, 'manual'> {\n  children: ReactNode;\n}\n\n/**\n * Provider that creates a Mycelium client and provides it to child hooks throughout your app.\n * @param props Connection options for the Mycelium client\n */\nexport function MyceliumProvider({\n  authentication,\n  baseURL,\n  children,\n}: MyceliumProviderProps) {\n  const [state, setState] = useState<MyceliumContextValue>({\n    isConnecting: false,\n    isConnected: false,\n    isError: false,\n    error: null,\n    client: null,\n  });\n\n  useDeepCompareEffect(() => {\n    async function _connect() {\n      try {\n        setState({\n          isConnecting: true,\n          isConnected: false,\n          isError: false,\n          error: null,\n          client: null,\n        });\n\n        const client = new Client({\n          authentication,\n          baseURL,\n          manual: true,\n        });\n\n        await client.connect({ authentication, baseURL });\n\n        setState({\n          isConnecting: false,\n          isConnected: true,\n          isError: false,\n          error: null,\n          client,\n        });\n      } catch (error) {\n        setState({\n          isConnecting: false,\n          isConnected: true,\n          isError: true,\n          error: error as Error,\n          client: null,\n        });\n      }\n    }\n\n    _connect();\n\n    return () => {\n      state.client?.disconnect();\n    };\n  }, [authentication, baseURL]);\n\n  return (\n    <MyceliumContext.Provider value={state}>\n      {children}\n    </MyceliumContext.Provider>\n  );\n}\n", "import { useContext } from 'react';\nimport { MyceliumContext } from './mycelium-provider';\n\nexport const NOT_IN_CONTEXT_WARNING =\n  'No Mycelium context. Did you forget to wrap your app in a <MyceliumProvider />?';\n\nexport function useMyceliumClient() {\n  const ctx = useContext(MyceliumContext);\n\n  if (ctx == null) {\n    throw new Error(NOT_IN_CONTEXT_WARNING);\n  }\n\n  return ctx;\n}\n", "import { Channel } from '@mycelium-now/core';\nimport { useEffect, useState } from 'react';\nimport invariant from 'invariant';\nimport { useMyceliumClient } from './use-mycelium-client';\n\n/**\n * Subscribe to a channel.\n * @param channelName The name of the channel you want to subscribe to.\n * @returns Instance of the channel you just subscribed to.\n *\n * @example\n * ```typescript\n * const channel = useChannel(\"my-channel\")\n * channel.on(\"some-event\", (data) => {\n *    // Do something with data\n * })\n * ```\n */\nexport function useChannel(channelName: string) {\n  invariant(channelName, 'Must supply channelName to useChannel');\n\n  const { client, isConnected } = useMyceliumClient();\n  const [channel, setChannel] = useState<Channel>();\n  const [state, setState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isError: false,\n    error: null as Error | null,\n  });\n\n  useEffect(() => {\n    async function _subscribe() {\n      // Return early if there's no client or if it's not connected\n      if (!client || !isConnected) {\n        return;\n      }\n\n      try {\n        setState({\n          isLoading: true,\n          isSuccess: false,\n          isError: false,\n          error: null,\n        });\n\n        setChannel(await client.channel(channelName));\n\n        setState({\n          isLoading: false,\n          isSuccess: true,\n          isError: false,\n          error: null,\n        });\n      } catch (error) {\n        setState({\n          isLoading: false,\n          isSuccess: false,\n          isError: true,\n          error: error as Error,\n        });\n      }\n    }\n\n    _subscribe();\n\n    // Cleanup on unmount/re-render\n    return () => {\n      channel?.unsubscribe().catch(console.error);\n    };\n  }, [client]);\n\n  return {\n    channel,\n    isLoading: state.isLoading,\n    isSuccess: state.isSuccess,\n    isError: state.isError,\n    error: state.error,\n  };\n}\n", "import { Channel, Listener } from '@mycelium-now/core';\nimport { useEffect, useState } from 'react';\n\n/**\n * Publish an event.\n *\n * @param channel Mycelium channel to publish on\n */\nexport function usePublishEvent(channel: Channel | undefined) {\n  const [state, setState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isError: false,\n    error: null as Error | null,\n  });\n\n  return {\n    publish: async <TData = unknown,>(\n      event: string,\n      data: TData,\n      includePublisher: boolean = false\n    ) => {\n      if (!channel) {\n        return;\n      }\n\n      try {\n        setState({\n          isLoading: true,\n          isSuccess: false,\n          isError: false,\n          error: null,\n        });\n\n        await channel.publish(event, data, includePublisher);\n\n        setState({\n          isLoading: false,\n          isSuccess: true,\n          isError: false,\n          error: null,\n        });\n      } catch (error) {\n        setState({\n          isLoading: false,\n          isSuccess: false,\n          isError: true,\n          error: error as Error,\n        });\n      }\n    },\n\n    isLoading: state.isLoading,\n    isSuccess: state.isSuccess,\n    isError: state.isError,\n    error: state.error,\n  };\n}\n", "import { Channel } from '@mycelium-now/core';\nimport { useEffect, useState } from 'react';\nimport invariant from 'invariant';\nimport { useMyceliumClient } from './use-mycelium-client';\n\n/**\n * Subscribe to a channel lazily.\n *\n * @example\n * ```typescript\n * const channel = useChannel(\"my-channel\")\n * channel.on(\"some-event\", (data) => {\n *    // Do something with data\n * })\n * ```\n */\nexport function useSubscribe() {\n  const { client } = useMyceliumClient();\n  const [channel, setChannel] = useState<Channel>();\n  const [state, setState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isError: false,\n    error: null as Error | null,\n  });\n\n  useEffect(() => {\n    // Cleanup on unmount/re-render\n    return () => {\n      channel?.unsubscribe().catch(console.error);\n    };\n  }, [client]);\n\n  return {\n    subscribe: async (channelName: string) => {\n      if (!client) {\n        return;\n      }\n\n      try {\n        setState({\n          isLoading: true,\n          isSuccess: false,\n          isError: false,\n          error: null,\n        });\n\n        setChannel(await client.channel(channelName));\n\n        setState({\n          isLoading: false,\n          isSuccess: true,\n          isError: false,\n          error: null,\n        });\n      } catch (error) {\n        setState({\n          isLoading: false,\n          isSuccess: false,\n          isError: true,\n          error: error as Error,\n        });\n      }\n    },\n\n    isLoading: state.isLoading,\n    isSuccess: state.isSuccess,\n    isError: state.isError,\n    error: state.error,\n  };\n}\n", "import { Channel, Listener } from '@mycelium-now/core';\n\nimport invariant from 'invariant';\nimport { useEffect } from 'react';\n\n/**\n * Adds the listener function to the end of the listeners array for the event.\n *\n * @param channel Mycelium channel to listen to\n * @param event Name of event to listen to\n * @param listener Listener function to call on a new event\n */\nexport function useOnEvent<TData = unknown>(\n  channel: Channel | undefined,\n  event: string,\n  listener: Listener<TData>\n) {\n  // error when required arguments aren't passed.\n  invariant(event, 'Must supply event to useOnEvent');\n  invariant(listener, 'Must supply listener to useOnEvent');\n\n  useEffect(() => {\n    if (!channel) {\n      return;\n    }\n\n    channel.on(event, listener);\n\n    return () => {\n      channel.off(event, listener);\n    };\n  }, [channel, event, listener]);\n}\n", "import { Channel, Listener } from '@mycelium-now/core';\n\nimport invariant from 'invariant';\nimport { useEffect } from 'react';\n\n/**\n * Adds a listener that will be fired when any event is emitted.\n *\n * @param channel Mycelium channel to listen to\n * @param listener Listener function to call when any event is emitted\n */\nexport function useOnAnyEvent<TData = unknown>(\n  channel: Channel | undefined,\n  listener: Listener<TData>\n) {\n  // error when required arguments aren't passed.\n  invariant(listener, 'Must supply listener to useOnAnyEvent');\n\n  useEffect(() => {\n    if (!channel) {\n      return;\n    }\n\n    channel.onAny(listener);\n\n    return () => {\n      channel.offAny(listener);\n    };\n  }, [channel, listener]);\n}\n", "import { Channel, Listener } from '@mycelium-now/core';\n\nimport invariant from 'invariant';\nimport { useEffect } from 'react';\n\n/**\n * Adds a one-time listener function for the event.\n *\n * @param channel Mycelium channel to listen to\n * @param event Name of event to listen to\n * @param listener Listener function to call on a new event\n */\nexport function useOnceEvent<TData = unknown>(\n  channel: Channel | undefined,\n  event: string,\n  listener: Listener<TData>\n) {\n  // error when required arguments aren't passed.\n  invariant(event, 'Must supply event to useOnceEvent');\n  invariant(listener, 'Must supply listener to useOnceEvent');\n\n  useEffect(() => {\n    if (!channel) {\n      return;\n    }\n\n    channel.once(event, listener);\n\n    return () => {\n      channel.offOnce(event, listener);\n    };\n  }, [channel, event, listener]);\n}\n", "import { Channel, Listener } from '@mycelium-now/core';\n\nimport invariant from 'invariant';\nimport { useEffect } from 'react';\n\n/**\n * Adds a listener that will be fired when any event is emitted. The listener is added to the beginning of the listeners array.\n *\n * @param channel Mycelium channel to listen to\n * @param listener Listener function to call when any event is emitted\n */\nexport function usePrependAnyEvent<TData = unknown>(\n  channel: Channel | undefined,\n  listener: Listener<TData>\n) {\n  // error when required arguments aren't passed.\n  invariant(listener, 'Must supply listener to usePrependAnyEvent');\n\n  useEffect(() => {\n    if (!channel) {\n      return;\n    }\n\n    channel.prependAny(listener);\n\n    return () => {\n      channel.offAny(listener);\n    };\n  }, [channel, listener]);\n}\n"],
  "mappings": "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",
  "names": []
}
